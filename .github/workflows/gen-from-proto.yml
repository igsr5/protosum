name: Generate code from proto

on:
  pull_request:

jobs:
  gen-from-proto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'npm'
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.18.0
      - name: install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y protobuf-compiler=3.6.1.3-2ubuntu5 &&
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.0 &&
          npm install grpc-tools grpc_tools_node_protoc_ts -D &&
          npm install @grpc/grpc-js google-protobuf &&
          protoc --version
      - name: generate code from proto
        run: make protogen
      - name: create pr of generate code
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: 'run `make protogen`'
          branch: gen-impl-from-${{github.head_ref}}
          base: 'master'
          body: 'generated by #${{ github.event.pull_request.number }}'
          delete-branch: true
          title: 'DO NOT EDIT: generate each language implementation'
            # - name: Comment when generate PR
            #   if: ${{steps.cpr.outputs.pull-request-url}}
            #   uses: thollander/actions-comment-pull-request@v1
            #   with:
            #     message: 'created PR of implementation from proto. URL: ${{ steps.cpr.outputs.pull-request-url }}'
            #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
            # - name: Comment when not generate PR
            #   if: false == ${{steps.cpr.outputs.pull-request-url}}
            #   uses: thollander/actions-comment-pull-request@v1
            #   with:
            #     message: 'not created PR of implementation from proto.'
            #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: "Make PR comment body"
        id: make-pr-comment
        run: | 
          # now=$(date "+%s") &&
          # pr-comment-body="It's ${now}" &&
          echo ::set-output name=result::${"test"}
      - name: "PR comment on Updating CFn Change Set"
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: header-of-comment
          message: ${{ steps.make-pr-comment.outputs.result }}
      - name: PR merge
        if: github.event.pull_request.merged == 'true'
        run: echo "test"
